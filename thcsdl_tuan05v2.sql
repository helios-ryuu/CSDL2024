SET DATEFORMAT DMY;
USE QUANLYBANHANG
GO

-- I. Ngôn ngữ định nghĩa dữ liệu (Data Definition Language):
-- 11.	Ngày mua hàng (NGHD) của một khách hàng thành viên sẽ lớn hơn hoặc bằng ngày khách hàng đó đăng ký thành viên (NGDK).
DROP TRIGGER IF EXISTS TRG_HD_KH;
GO
CREATE TRIGGER TRG_HD_KH ON HOADON FOR INSERT
AS
BEGIN
	DECLARE @NGHD SMALLDATETIME, @NGDK SMALLDATETIME, @MAKH CHAR(4)
	SELECT @NGHD = NGHD, @MAKH = MAKH FROM INSERTED
	SELECT	@NGDK = NGDK FROM KHACHHANG WHERE MAKH = @MAKH

	PRINT @NGHD
	PRINT @NGDK

	IF (@NGHD >= @NGDK)
		PRINT N'Thêm mới một hóa đơn thành công.'
	ELSE
	BEGIN
		PRINT N'Lỗi: Ngày mua hàng của một khách hàng thành viên sẽ lớn hơn hoặc bằng ngày khách hàng đó đăng ký thành viên.'
		ROLLBACK TRANSACTION
	END
END
GO

INSERT INTO HOADON(SOHD, NGHD, MAKH, MANV, TRIGIA) VALUES('1024', '22/07/2005', 'KH01', 'NV01', '320000')
delete from HOADON where SOHD = '1024'
GO

-- 12.	Ngày bán hàng (NGHD) của một nhân viên phải lớn hơn hoặc bằng ngày nhân viên đó vào làm.
DROP TRIGGER IF EXISTS TRG_HD_NV;
GO
CREATE TRIGGER TRG_HD_NV ON HOADON FOR INSERT
AS
BEGIN
	DECLARE @NGHD SMALLDATETIME, @NGVL SMALLDATETIME, @MANV CHAR(4)
	SELECT @NGHD = NGHD, @MANV = MANV FROM INSERTED
	SELECT	@NGVL = NGVL FROM NHANVIEN WHERE MANV = @MANV

	IF (@NGHD >= @NGVL)
		PRINT N'Thêm mới một hóa đơn thành công.'
	ELSE
	BEGIN
		PRINT N'Lỗi: Ngày bán hàng của một nhân viên phải lớn hơn hoặc bằng ngày nhân viên đó vào làm.'
		ROLLBACK TRANSACTION
	END
END
GO

-- 13.	Mỗi một hóa đơn phải có ít nhất một chi tiết hóa đơn.
DROP TRIGGER IF EXISTS TRG_HD_CTHD;
GO
CREATE TRIGGER TRG_HD_CTHD ON HOADON FOR INSERT
AS
BEGIN
	DECLARE @SOHD INT, @COUNT_SOHD INT
	SELECT @SOHD = SOHD FROM INSERTED
	SELECT @COUNT_SOHD = COUNT(SOHD) FROM CTHD WHERE SOHD = @SOHD

	IF (@COUNT_SOHD >= 1)
		PRINT N'Thêm mới một hóa đơn thành công.'
	ELSE
	BEGIN
		PRINT N'Lỗi: Mỗi một hóa đơn phải có ít nhất một chi tiết hóa đơn.'
		ROLLBACK TRANSACTION
	END
END
GO

-- 14.	Trị giá của một hóa đơn là tổng thành tiền (số lượng*đơn giá) của các chi tiết thuộc hóa đơn đó.
DROP TRIGGER IF EXISTS TRG_CTHD;
DROP TRIGGER IF EXISTS TR_DEL_CTHD;
GO
CREATE TRIGGER TRG_CTHD ON CTHD FOR INSERT, DELETE
AS
BEGIN
	DECLARE @SOHD INT, @TONGGIATRI INT

	SELECT @TONGGIATRI = SUM(SL * GIA), @SOHD = SOHD
	FROM INSERTED INNER JOIN SANPHAM
	ON INSERTED.MASP = SANPHAM.MASP
	GROUP BY SOHD

	UPDATE HOADON
	SET TRIGIA += @TONGGIATRI
	WHERE SOHD = @SOHD
END
GO

CREATE TRIGGER TR_DEL_CTHD ON CTHD FOR DELETE
AS
BEGIN
	DECLARE @SOHD INT, @GIATRI INT

	SELECT @SOHD = SOHD, @GIATRI = SL * GIA
	FROM DELETED INNER JOIN SANPHAM
	ON SANPHAM.MASP = DELETED.MASP

	UPDATE HOADON
	SET TRIGIA -= @GIATRI
	WHERE SOHD = @SOHD
END
GO

USE QuanLyGiaoVu;

DROP TRIGGER IF EXISTS TRG_UPDATE_MONHOC_TRUOC;
GO
CREATE TRIGGER TRG_UPDATE_MONHOC_TRUOC
ON DIEUKIEN
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
    -- Xóa dữ liệu cũ trong bảng tạm
    DELETE FROM MONHOC_TRUOC_CSDL;

    -- Chèn dữ liệu mới vào bảng tạm
    INSERT INTO MONHOC_TRUOC_CSDL (MAMH, TENMH)
    SELECT MH.MAMH, MH.TENMH
    FROM MONHOC MH
    WHERE MH.MAMH IN (
        SELECT DK.MAMH_TRUOC
        FROM DIEUKIEN DK
        WHERE DK.MAMH = (
            SELECT MAMH
            FROM MONHOC
            WHERE UPPER(TENMH) = 'CO SO DU LIEU'
        )
    );
END;
SELECT * FROM MONHOC_TRUOC_CSDL;
GO
--Câu 10:
DROP TRIGGER IF EXISTS TRG_UPDATE_MON_CAU_TRUC_ROI_RAC;
GO
CREATE TRIGGER TRG_UPDATE_MON_CAU_TRUC_ROI_RAC
ON DIEUKIEN
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
    -- Xóa dữ liệu cũ trong bảng tạm
    DELETE FROM MON_CAU_TRUC_ROI_RAC;

    -- Chèn danh sách môn học phải học trước môn "Cau Truc Roi Rac"
    INSERT INTO MON_CAU_TRUC_ROI_RAC (MAMH, TENMH)
    SELECT MH.MAMH, MH.TENMH
    FROM MONHOC MH
    WHERE MH.MAMH IN (
        SELECT DK.MAMH_TRUOC
        FROM DIEUKIEN DK
        WHERE DK.MAMH = (
            SELECT MAMH
            FROM MONHOC
            WHERE UPPER(TENMH) = 'CAU TRUC ROI RAC'
        )
    );
END;
GO

--Câu 15
DROP TRIGGER IF EXISTS trg_KiemTraKetQuaThi;
GO
CREATE TRIGGER trg_KiemTraKetQuaThi
ON KETQUATHI
AFTER INSERT, UPDATE
AS
BEGIN
    -- Câu lệnh xử lý học viên lớp 'K11' thi 3 lần không đạt hoặc lần 2 môn CTRR được 5 điểm
    SELECT HV.MAHV, HV.TEN, HV.HO
    FROM HOCVIEN HV
    JOIN KETQUATHI KQ ON HV.MAHV = KQ.MAHV
    JOIN MONHOC MH ON KQ.MAMH = MH.MAMH
    WHERE HV.MALOP = 'K11'
        AND (
            (KQ.LANTHI = 3 AND KQ.KQUA = 'Khong dat')
            OR (KQ.LANTHI = 2 AND MH.TENMH = 'CTRR' AND KQ.DIEM = 5)
        )
END;
GO
--Câu 16:
DROP TRIGGER IF EXISTS trg_GiaoVienDayHaiLop;
GO
CREATE TRIGGER trg_GiaoVienDayHaiLop
ON GIANGDAY
AFTER INSERT, UPDATE
AS
BEGIN
    SELECT GV.MAGV, GV.HOTEN
    FROM GIANGDAY GD
    JOIN GIAOVIEN GV ON GD.MAGV = GV.MAGV
    JOIN MONHOC MH ON GD.MAMH = MH.MAMH
    WHERE MH.TENMH = 'CTRR'
    GROUP BY GV.MAGV, GV.HOTEN
    HAVING COUNT(DISTINCT GD.MALOP) >= 2;
END;

--Câu 17:
DROP TRIGGER IF EXISTS trg_DiemThiSauCung;
GO
CREATE TRIGGER trg_DiemThiSauCung
ON KETQUATHI
AFTER INSERT, UPDATE
AS
BEGIN
    SELECT HV.MAHV, HV.HO, HV.TEN, KQ.DIEM
    FROM HOCVIEN HV
    JOIN KETQUATHI KQ ON HV.MAHV = KQ.MAHV
    JOIN MONHOC MH ON KQ.MAMH = MH.MAMH
    WHERE MH.TENMH = 'CSDL'
        AND KQ.LANTHI = (
            SELECT MAX(KQ2.LANTHI)
            FROM KETQUATHI KQ2
            WHERE KQ2.MAHV = KQ.MAHV AND KQ2.MAMH = KQ.MAMH
        );
END;


--Câu 18:
DROP TRIGGER IF EXISTS trg_DiemThiCaoNhat;
GO
CREATE TRIGGER trg_DiemThiCaoNhat
ON KETQUATHI
AFTER INSERT, UPDATE
AS
BEGIN
    SELECT HV.MAHV, HV.HO, HV.TEN, MAX(KQ.DIEM) AS DIEM_CAO_NHAT
    FROM HOCVIEN HV
    JOIN KETQUATHI KQ ON HV.MAHV = KQ.MAHV
    JOIN MONHOC MH ON KQ.MAMH = MH.MAMH
    WHERE MH.TENMH = 'Co So Du Lieu'
    GROUP BY HV.MAHV, HV.HO, HV.TEN;
END;


--Câu 19:
DROP TRIGGER IF EXISTS trg_KhoaMoiNhat;
GO
CREATE TRIGGER trg_KhoaMoiNhat
ON KHOA
AFTER INSERT, UPDATE
AS
BEGIN
    SELECT TOP 1 MAKHOA, TENKHOA, NGTLAP
    FROM KHOA
    ORDER BY NGTLAP DESC;
END;


--Câu 20:
DROP TRIGGER IF EXISTS trg_GiaoVienHocHam;
GO
CREATE TRIGGER trg_GiaoVienHocHam
ON GIAOVIEN
AFTER INSERT, UPDATE
AS
BEGIN
    SELECT COUNT(*) AS SO_LUONG_GV
    FROM GIAOVIEN
    WHERE HESO IN ('GS', 'PGS');
END;



--Câu 21:
DROP TRIGGER IF EXISTS trg_ThongKeHocVi;
GO
CREATE TRIGGER trg_ThongKeHocVi
ON GIAOVIEN
AFTER INSERT, UPDATE
AS
BEGIN
    SELECT GV.HESO, K.TENKHOA, COUNT(*) AS SO_LUONG
    FROM GIAOVIEN GV
    JOIN KHOA K ON GV.MAKHOA = K.MAKHOA
    GROUP BY GV.HESO, K.TENKHOA;
END;


--Câu 22:
DROP TRIGGER IF EXISTS trg_ThongKeKetQua;
GO
CREATE TRIGGER trg_ThongKeKetQua
ON KETQUATHI
AFTER INSERT, UPDATE
AS
BEGIN
    SELECT MH.TENMH, KQ.KQUA, COUNT(*) AS SO_LUONG
    FROM KETQUATHI KQ
    JOIN MONHOC MH ON KQ.MAMH = MH.MAMH
    GROUP BY MH.TENMH, KQ.KQUA;
END;



--Câu 23:
DROP TRIGGER IF EXISTS trg_GVCNVaDayMon;
GO
CREATE TRIGGER trg_GVCNVaDayMon
ON GIANGDAY
AFTER INSERT, UPDATE
AS
BEGIN
    SELECT GV.MAGV, GV.HOTEN
    FROM GIANGDAY GD
    JOIN GIAOVIEN GV ON GD.MAGV = GV.MAGV
    JOIN LOP L ON GD.MALOP = L.MALOP
    WHERE GD.MAGV = L.MAGVCN
    GROUP BY GV.MAGV, GV.HOTEN;
END;


--Câu 24:
DROP TRIGGER IF EXISTS trg_LopSiSoCaoNhat;
GO
CREATE TRIGGER trg_LopSiSoCaoNhat
ON HOCVIEN
AFTER INSERT, UPDATE
AS
BEGIN
    SELECT TOP 1 L.MALOP, L.TENLOP, COUNT(HV.MAHV) AS SISOC
    FROM LOP L
    JOIN HOCVIEN HV ON L.MALOP = HV.MALOP
    GROUP BY L.MALOP, L.TENLOP
    ORDER BY SISOC DESC;
END;